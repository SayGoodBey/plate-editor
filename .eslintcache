[{"/Users/xinshang/Documents/eeo/plate-editor/docs/usage.js":"1","/Users/xinshang/Documents/eeo/plate-editor/examples/Demo1.tsx":"2","/Users/xinshang/Documents/eeo/plate-editor/src/common/editableProps.ts":"3","/Users/xinshang/Documents/eeo/plate-editor/src/common/formatHTML.ts":"4","/Users/xinshang/Documents/eeo/plate-editor/src/common/mapNodeId.ts":"5","/Users/xinshang/Documents/eeo/plate-editor/src/common/plateUI.tsx":"6","/Users/xinshang/Documents/eeo/plate-editor/src/components/ParagraphElement/Index.tsx":"7","/Users/xinshang/Documents/eeo/plate-editor/src/index.tsx":"8","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/basic-elements/basicElementsPlugins.ts":"9","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/basic-marks/basicMarksPlugins.tsx":"10","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/basic-nodes/basicNodesPlugins.tsx":"11","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/dynamic-font-color/Index.ts":"12","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/dynamic-font-color/types.ts":"13","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/html-serializer/htmlserializer.tsx":"14","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/html-serializer/types.ts":"15","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/limit-chars/limitchars.tsx":"16","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/limit-chars/types.ts":"17","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/paste-plain-text/Index.ts":"18","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/serializing-html/HighlightHTML.tsx":"19","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/serializing-html/types.ts":"20","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/word-count/Index.tsx":"21","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/word-count/types.ts":"22","/Users/xinshang/Documents/eeo/plate-editor/src/typings.d.ts":"23"},{"size":79,"mtime":1692014966298,"results":"24","hashOfConfig":"25"},{"size":3031,"mtime":1692014966338,"results":"26","hashOfConfig":"25"},{"size":180,"mtime":1692014773214,"results":"27","hashOfConfig":"25"},{"size":1896,"mtime":1692014776262,"results":"28","hashOfConfig":"25"},{"size":142,"mtime":1692014779576,"results":"29","hashOfConfig":"25"},{"size":200,"mtime":1692014802959,"results":"30","hashOfConfig":"25"},{"size":167,"mtime":1692014957284,"results":"31","hashOfConfig":"25"},{"size":3949,"mtime":1692014617790,"results":"32","hashOfConfig":"25"},{"size":198,"mtime":1692014966738,"results":"33","hashOfConfig":"25"},{"size":353,"mtime":1692014966749,"results":"34","hashOfConfig":"25"},{"size":278,"mtime":1692014966755,"results":"35","hashOfConfig":"25"},{"size":7252,"mtime":1692014966778,"results":"36","hashOfConfig":"25"},{"size":73,"mtime":1692014966787,"results":"37","hashOfConfig":"25"},{"size":2345,"mtime":1692014966822,"results":"38","hashOfConfig":"25"},{"size":65,"mtime":1692014966832,"results":"39","hashOfConfig":"25"},{"size":5341,"mtime":1692014661496,"results":"40","hashOfConfig":"25"},{"size":57,"mtime":1692014966859,"results":"41","hashOfConfig":"25"},{"size":935,"mtime":1692014966865,"results":"42","hashOfConfig":"25"},{"size":2243,"mtime":1692014966876,"results":"43","hashOfConfig":"25"},{"size":60,"mtime":1692014966883,"results":"44","hashOfConfig":"25"},{"size":1452,"mtime":1692014966904,"results":"45","hashOfConfig":"25"},{"size":86,"mtime":1692014679366,"results":"46","hashOfConfig":"25"},{"size":41,"mtime":1691999257864,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ap1zsn",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":4,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":3,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xinshang/Documents/eeo/plate-editor/docs/usage.js",[],[],"/Users/xinshang/Documents/eeo/plate-editor/examples/Demo1.tsx",["119","120","121","122","123","124","125"],[],"/Users/xinshang/Documents/eeo/plate-editor/src/common/editableProps.ts",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/common/formatHTML.ts",["126","127","128","129","130","131","132","133","134","135"],["136","137","138"],"/Users/xinshang/Documents/eeo/plate-editor/src/common/mapNodeId.ts",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/common/plateUI.tsx",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/components/ParagraphElement/Index.tsx",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/index.tsx",["139","140","141","142","143","144","145","146"],[],"import { Plate, PlateProvider, createPlugins } from '@udecode/plate-core';\nimport { createFontColorPlugin } from '@udecode/plate-font';\nimport { Node } from 'slate';\nimport { basicNodesPlugins } from './plugins/basic-nodes/basicNodesPlugins';\nimport { createLimitCharsPlugin } from './plugins/limit-chars/limitchars';\nimport { createHighlightHTMLPlugin } from './plugins/serializing-html/HighlightHTML';\nimport { CSSProperties, FC, ReactNode, useEffect, useMemo, useRef, useState } from 'react';\nimport { createDynamicFontColorPlugin } from './plugins/dynamic-font-color/Index';\nimport { createPastePlainTextPlugin } from './plugins/paste-plain-text/Index';\nimport { createDeserializePlugin } from '../src/plugins/html-serializer/htmlserializer';\nimport { toArray } from 'lodash';\nimport { createWordCountPlugin } from './plugins/word-count/Index';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { createDndPlugin } from '@udecode/plate-dnd';\nimport { plateUI } from './common/plateUI';\nimport * as React from 'react';\n\nconst serialize = (nodes: Node[]): string => {\n  return nodes.map((n) => Node.string(n)).join('\\n');\n};\n\nconst EditorContainer: React.FC<{\n  // style: CSSProperties;\n  children: ReactNode;\n  className?: string;\n}> = ({ className = '', children }) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // useEffect(() => {\n  //   if (containerRef.current) {\n  //     const editableElement = containerRef.current.querySelector(\n  //       '[contenteditable=\"true\"]',\n  //     );\n  //     if (editableElement && editableElement instanceof HTMLElement) {\n  //       editableElement.style.height = '100%';\n  //     }\n  //   }\n  // }, [style]);\n\n  return (\n    <div ref={containerRef} className={className}>\n      {children}\n    </div>\n  );\n};\n\nconst defaultConfig = {\n  maxLength: 100,\n  spellCheck: false,\n  style: {\n    outline: 'none',\n    color: '',\n  },\n};\n\nconst EEOEditor: FC<{\n  placeholder?: string;\n  dynamicFontColor?: string;\n  autoFocus?: boolean;\n  maxLength?: number;\n  readOnly?: boolean;\n  initialValue?: any;\n  onHtmlChange?: Function;\n  onChange?: Function;\n  onLengthChange?: Function;\n  showWordCount?: boolean;\n  className?: string; // plate编辑器类名\n  rootClassName?: string; // 编辑器根容器类名\n}> = (props: any) => {\n  const config = { ...defaultConfig, ...props };\n  const { rootClassName, ...editableProps } = config;\n  const plugins = createPlugins(\n    [\n      ...basicNodesPlugins,\n      createDeserializePlugin({\n        options: {\n          initialValue: props.initialValue,\n        },\n      }) as any,\n      createFontColorPlugin(),\n      createHighlightHTMLPlugin({\n        options: {\n          onHtmlChange: props.onHtmlChange,\n        },\n      }), // 返回html格式的插件\n      createWordCountPlugin({\n        options: {\n          maxLength: props.maxLength,\n          showWordCount: props.showWordCount,\n        },\n      }),\n      createDndPlugin({ options: { enableScroller: true } }),\n      createDynamicFontColorPlugin({\n        options: {\n          dynamicFontColor: props.dynamicFontColor,\n        },\n      }),\n      createPastePlainTextPlugin(),\n      createLimitCharsPlugin({\n        options: {\n          maxLength: props.maxLength,\n        },\n      }), // 限制输入长度的插件\n    ],\n    { components: plateUI },\n  );\n\n  const onChangeData = (value: any) => {\n    const serializedValue = serialize(value);\n    const valueLength = toArray(serializedValue).length;\n    props.onChange(value);\n    if (props.onLengthChange) {\n      props.onLengthChange(valueLength);\n    }\n  };\n\n  return (\n    <EditorContainer className={props.className}>\n      <DndProvider backend={HTML5Backend}>\n        <PlateProvider plugins={plugins} onChange={onChangeData}>\n          <Plate editableProps={editableProps} />\n        </PlateProvider>\n      </DndProvider>\n    </EditorContainer>\n  );\n};\n\nexport default EEOEditor;\n","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/basic-elements/basicElementsPlugins.ts",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/basic-marks/basicMarksPlugins.tsx",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/basic-nodes/basicNodesPlugins.tsx",["147"],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/dynamic-font-color/Index.ts",["148","149","150","151","152","153"],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/dynamic-font-color/types.ts",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/html-serializer/htmlserializer.tsx",["154","155","156","157","158","159"],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/html-serializer/types.ts",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/limit-chars/limitchars.tsx",["160","161","162","163"],[],"import { createPluginFactory } from '@udecode/plate-common';\nimport { Editor, Node, Transforms, Text, Path } from 'slate';\nimport { LimitCharsPlugin } from './types';\nimport { toArray } from 'lodash';\n\nconst PLUGIN_KEY_LIMIT_CHARS = 'PLUGIN_KEY_LIMIT_CHARS';\n\nconst serialize = (nodes: Node[]): string => {\n  return nodes.map((n) => Node.string(n)).join('\\n');\n};\n\nconst getStringLength = (str: string) => toArray(str).length;\n\nconst removeAllEmptyNodes = (editor: Editor, path: Path) => {\n  let removedLength = 0;\n  const removeNode = (editor: Editor, path: Path) => {\n    if (path.length === 0) return;\n    const node = Node.get(editor, path);\n    if (Text.isText(node)) {\n      console.log('remove node', path);\n      Transforms.removeNodes(editor, { at: path });\n      removedLength += getStringLength(node.text);\n      removeNode(editor, Path.parent(path));\n    } else {\n      if (node.children.length === 1 && Text.isText(node.children[0]) && node.children[0].text === '') {\n        console.log('remove node', path);\n        Transforms.removeNodes(editor, { at: path });\n        removedLength++;\n        removeNode(editor, Path.parent(path));\n      }\n    }\n  };\n  removeNode(editor, path);\n  return removedLength;\n};\n\n// 定义截取函数\nconst truncateSlateContent = (editor: Editor, maxLength: number) => {\n  const currentText = serialize(editor.children);\n  const currentTextLength = getStringLength(currentText);\n  if (currentTextLength <= maxLength) return;\n  const lengthToTruncate = currentTextLength - maxLength;\n  console.log('========== truncate start. maxLength: %s ==========', maxLength, lengthToTruncate);\n  console.log('editor.children: %o', editor.children);\n  let truncatedLength = 0;\n  const nodePath: Path = [];\n  const truncateNode = (node: Node, index?: number) => {\n    console.log('truncateNode. nodePath: %o', nodePath);\n    if (index !== undefined) {\n      nodePath.push(index);\n    }\n    if (truncatedLength >= lengthToTruncate) return;\n    console.log('need to truncate. truncatedLength: %s, lengthToTruncate: %s', truncatedLength, lengthToTruncate);\n    if (Text.isText(node)) {\n      console.log('text node');\n      const nodeLength = getStringLength(node.text);\n      if (truncatedLength + nodeLength >= lengthToTruncate) {\n        const nodeLengthToTruncate = lengthToTruncate - truncatedLength;\n        console.log(\n          'truncate text. text: %s, nodeLength: %s, nodeLengthToTruncate: %s, lengthToTruncate: %s, truncatedLength: %s',\n          node.text,\n          nodeLength,\n          nodeLengthToTruncate,\n          lengthToTruncate,\n          truncatedLength,\n        );\n        // nodeLength !== node.text.length 说明node.text中有emoji，此时需要用node.text.length作为总长，来计算offset\n        if (nodeLength !== node.text.length) {\n          console.log('has emoji');\n          Editor.withoutNormalizing(editor, () => {\n            // 一个emoji都算为一个可见字符\n            // offset表示以可见字符为单位的偏移量\n            const offset = nodeLength - nodeLengthToTruncate;\n            // truncatedText表示实际需要截取掉的可见字符\n            const truncatedText = toArray(node.text).slice(offset).join('');\n            // truncatedTextLength表示要被截取的字符的实际字符长度。一个emoji可能占多个实际字符长度\n            const truncatedTextLength = truncatedText.length;\n            console.log(\n              'delete text. offset: %s, truncatedText: %s, truncatedTextLength: %s',\n              offset,\n              truncatedText,\n              truncatedTextLength,\n            );\n            // Transforms.delete方法，需要按照实际字符长度去删除\n            Transforms.delete(editor as any, {\n              at: { path: nodePath, offset: node.text.length - truncatedTextLength },\n              distance: truncatedTextLength,\n            });\n          });\n        } else {\n          Transforms.delete(editor as any, {\n            at: { path: nodePath, offset: nodeLength - nodeLengthToTruncate },\n            distance: nodeLengthToTruncate,\n          });\n        }\n        truncatedLength = lengthToTruncate;\n      } else {\n        const removedLength = removeAllEmptyNodes(editor, nodePath);\n        console.log(\n          'remove current node. nodeLength: %s, truncatedLength: %s, lengthToTruncate: %s, removedLength: %s',\n          nodeLength,\n          truncatedLength,\n          lengthToTruncate,\n          removedLength,\n        );\n        truncatedLength += removedLength;\n      }\n    } else {\n      console.log('element node');\n      for (let i = node.children.length - 1; i >= 0; i--) {\n        truncateNode(node.children[i], i);\n      }\n    }\n    nodePath.pop();\n  };\n  truncateNode(editor as Node);\n  console.log('========== truncate end ==========');\n};\n\nexport const createLimitCharsPlugin = createPluginFactory({\n  isElement: false,\n  key: PLUGIN_KEY_LIMIT_CHARS,\n  useHooks: (editor) => {\n    const { maxLength } = editor.pluginsByKey[PLUGIN_KEY_LIMIT_CHARS].options as LimitCharsPlugin;\n    truncateSlateContent(editor as Editor, maxLength);\n  },\n  handlers: {\n    onChange: (editor) => (event) => {\n      const { maxLength } = editor.pluginsByKey[PLUGIN_KEY_LIMIT_CHARS].options as LimitCharsPlugin;\n      truncateSlateContent(editor as Editor, maxLength);\n    },\n  },\n});\n","/Users/xinshang/Documents/eeo/plate-editor/src/plugins/limit-chars/types.ts",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/paste-plain-text/Index.ts",["164"],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/serializing-html/HighlightHTML.tsx",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/serializing-html/types.ts",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/word-count/Index.tsx",["165","166"],[],"/Users/xinshang/Documents/eeo/plate-editor/src/plugins/word-count/types.ts",[],[],"/Users/xinshang/Documents/eeo/plate-editor/src/typings.d.ts",[],[],{"ruleId":"167","severity":1,"message":"168","line":13,"column":26,"nodeType":"169","messageId":"170","endLine":13,"endColumn":32},{"ruleId":"167","severity":1,"message":"171","line":17,"column":26,"nodeType":"169","messageId":"170","endLine":17,"endColumn":32},{"ruleId":"167","severity":1,"message":"172","line":21,"column":23,"nodeType":"169","messageId":"170","endLine":21,"endColumn":29},{"ruleId":"167","severity":1,"message":"172","line":25,"column":29,"nodeType":"169","messageId":"170","endLine":25,"endColumn":35},{"ruleId":"167","severity":1,"message":"172","line":29,"column":27,"nodeType":"169","messageId":"170","endLine":29,"endColumn":33},{"ruleId":"167","severity":1,"message":"172","line":37,"column":25,"nodeType":"169","messageId":"170","endLine":37,"endColumn":31},{"ruleId":"167","severity":1,"message":"172","line":41,"column":29,"nodeType":"169","messageId":"170","endLine":41,"endColumn":35},{"ruleId":"167","severity":1,"message":"173","line":6,"column":7,"nodeType":"169","messageId":"170","endLine":6,"endColumn":8},{"ruleId":"167","severity":1,"message":"174","line":10,"column":58,"nodeType":"169","messageId":"170","endLine":10,"endColumn":59},{"ruleId":"167","severity":1,"message":"174","line":14,"column":49,"nodeType":"169","messageId":"170","endLine":14,"endColumn":50},{"ruleId":"167","severity":1,"message":"175","line":17,"column":13,"nodeType":"169","messageId":"170","endLine":17,"endColumn":14},{"ruleId":"176","severity":2,"message":"177","line":43,"column":9,"nodeType":"178","messageId":"179","endLine":43,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":46,"column":9,"nodeType":"182","messageId":"183","endLine":48,"endColumn":31},{"ruleId":"176","severity":2,"message":"177","line":47,"column":11,"nodeType":"178","messageId":"179","endLine":47,"endColumn":102,"fix":"184"},{"ruleId":"180","severity":1,"message":"181","line":53,"column":9,"nodeType":"182","messageId":"183","endLine":55,"endColumn":31},{"ruleId":"176","severity":2,"message":"177","line":54,"column":11,"nodeType":"178","messageId":"179","endLine":54,"endColumn":96,"fix":"185"},{"ruleId":"186","severity":2,"message":"187","line":60,"column":28,"nodeType":"188","messageId":"189","endLine":60,"endColumn":29,"fix":"190"},{"ruleId":"191","severity":2,"message":"192","line":12,"column":14,"nodeType":"193","messageId":"194","endLine":12,"endColumn":41,"fix":"195","suppressions":"196"},{"ruleId":"191","severity":2,"message":"192","line":62,"column":7,"nodeType":"193","messageId":"194","endLine":62,"endColumn":32,"fix":"197","suppressions":"198"},{"ruleId":"191","severity":2,"message":"192","line":69,"column":28,"nodeType":"193","messageId":"194","endLine":69,"endColumn":52,"fix":"199","suppressions":"200"},{"ruleId":"201","severity":1,"message":"202","line":7,"column":10,"nodeType":"169","messageId":"203","endLine":7,"endColumn":23},{"ruleId":"201","severity":1,"message":"204","line":7,"column":40,"nodeType":"169","messageId":"203","endLine":7,"endColumn":49},{"ruleId":"201","severity":1,"message":"205","line":7,"column":51,"nodeType":"169","messageId":"203","endLine":7,"endColumn":58},{"ruleId":"201","severity":1,"message":"206","line":7,"column":68,"nodeType":"169","messageId":"203","endLine":7,"endColumn":76},{"ruleId":"167","severity":1,"message":"207","line":20,"column":21,"nodeType":"169","messageId":"170","endLine":20,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":64,"column":18,"nodeType":"169","messageId":"210","endLine":64,"endColumn":26},{"ruleId":"208","severity":1,"message":"209","line":65,"column":14,"nodeType":"169","messageId":"210","endLine":65,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":66,"column":20,"nodeType":"169","messageId":"210","endLine":66,"endColumn":28},{"ruleId":"201","severity":1,"message":"211","line":3,"column":10,"nodeType":"169","messageId":"203","endLine":3,"endColumn":27},{"ruleId":"201","severity":1,"message":"212","line":10,"column":28,"nodeType":"169","messageId":"203","endLine":10,"endColumn":32},{"ruleId":"167","severity":1,"message":"173","line":25,"column":12,"nodeType":"169","messageId":"170","endLine":25,"endColumn":13},{"ruleId":"201","severity":1,"message":"213","line":83,"column":38,"nodeType":"169","messageId":"203","endLine":83,"endColumn":48},{"ruleId":"201","severity":1,"message":"214","line":91,"column":24,"nodeType":"169","messageId":"203","endLine":91,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":99,"column":1,"nodeType":"188","messageId":"217","endLine":99,"endColumn":148},{"ruleId":"201","severity":1,"message":"218","line":121,"column":11,"nodeType":"169","messageId":"203","endLine":121,"endColumn":16},{"ruleId":"219","severity":1,"message":"220","line":17,"column":7,"nodeType":"221","messageId":"222","endLine":20,"endColumn":26},{"ruleId":"219","severity":1,"message":"220","line":27,"column":7,"nodeType":"221","messageId":"222","endLine":27,"endColumn":64},{"ruleId":"219","severity":1,"message":"220","line":28,"column":7,"nodeType":"221","messageId":"222","endLine":31,"endColumn":26},{"ruleId":"219","severity":1,"message":"220","line":42,"column":7,"nodeType":"221","messageId":"222","endLine":45,"endColumn":26},{"ruleId":"219","severity":1,"message":"220","line":46,"column":7,"nodeType":"221","messageId":"222","endLine":46,"endColumn":61},{"ruleId":"219","severity":1,"message":"220","line":49,"column":7,"nodeType":"221","messageId":"222","endLine":49,"endColumn":61},{"ruleId":"167","severity":1,"message":"207","line":9,"column":21,"nodeType":"169","messageId":"170","endLine":9,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":68,"column":9,"nodeType":"182","messageId":"183","endLine":95,"endColumn":10},{"ruleId":"167","severity":1,"message":"173","line":110,"column":16,"nodeType":"169","messageId":"170","endLine":110,"endColumn":17},{"ruleId":"201","severity":1,"message":"213","line":128,"column":28,"nodeType":"169","messageId":"203","endLine":128,"endColumn":33},{"ruleId":"167","severity":1,"message":"173","line":11,"column":12,"nodeType":"169","messageId":"170","endLine":11,"endColumn":13},{"ruleId":"167","severity":1,"message":"207","line":11,"column":21,"nodeType":"169","messageId":"170","endLine":11,"endColumn":22},{"ruleId":"201","severity":1,"message":"223","line":14,"column":31,"nodeType":"169","messageId":"203","endLine":14,"endColumn":41},"id-length","Identifier name 'a' is too short (< 2).","Identifier","tooShort","Identifier name 'b' is too short (< 2).","Identifier name 'e' is too short (< 2).","Identifier name 'i' is too short (< 2).","Identifier name 'x' is too short (< 2).","Identifier name 'p' is too short (< 2).","nonblock-statement-body-position","Expected no linebreak before this statement.","ExpressionStatement","expectNoLinebreak","no-negated-condition","Unexpected negated condition.","IfStatement","unexpectedNegated",{"range":"224","text":"225"},{"range":"226","text":"225"},"space-in-parens","There should be no space before this paren.","Program","rejectedClosingSpace",{"range":"227","text":"228"},"prefer-template","Unexpected string concatenation.","BinaryExpression","unexpectedStringConcatenation",{"range":"229","text":"230"},["231"],{"range":"232","text":"233"},["234"],{"range":"235","text":"236"},["237"],"@typescript-eslint/no-unused-vars","'CSSProperties' is defined but never used.","unusedVar","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","Identifier name 'n' is too short (< 2).","@typescript-eslint/ban-types","Don't use `Function` as a type. The `Function` type accepts any function-like value.\nIt provides no type safety when calling the function, which can be a common source of bugs.\nIt also accepts things like class declarations, which will throw at runtime as they will not be called with `new`.\nIf you are expecting the function to accept certain arguments, you should explicitly define the function shape.","bannedTypeMessage","'basicMarksPlugins' is defined but never used.","'Node' is defined but never used.","'event' is defined but never used.","'editor' is defined but never used.","max-len","This line has a length of 147. Maximum allowed is 120.","max","'child' is assigned a value but never used.","no-case-declarations","Unexpected lexical declaration in case block.","VariableDeclaration","unexpected","'props' is defined but never used.",[1106,1117]," ",[1404,1415],[1594,1595],"",[312,339],"`<--TEMPPRE${  i++  }/-->`",{"kind":"238","justification":"228"},[1630,1655],"`<--TEMPPRE${  i  }/-->`",{"kind":"238","justification":"228"},[1768,1792],"`${pre[i].indent  }</pre>`",{"kind":"238","justification":"228"},"directive"]